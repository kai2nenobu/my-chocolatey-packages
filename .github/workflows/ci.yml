name: Continuous Packaging

on:
  workflow_dispatch: # Enable manual trigger
    inputs:
      git_ref:
        description: Reference of git (like refs/heads/master or refs/tags/v1.0.0)
        required: true
  push:
    branches: 'package/*'
    tags: '*/*'

env:
  MINGW_ROOT: 'C:\msys64\mingw32'
  MSYS2_ROOT: 'C:\msys64'
  PYTHON27_ROOT: 'C:\hostedtoolcache\windows\Python\2.7.18\x64'

jobs:
  build:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v4
      - name: Check a build environment
        run: |
          Get-CimInstance win32_operatingsystem -Property Caption, OSArchitecture, Version | fl Caption, OSArchitecture, Version
          $PSVersionTable
          git --version
          choco --version
          cmd /c "set" | grep -i 'github\|runner' | sort
      - name: Detect a target package # from a tag name or a branch name
        run: |
          if ($env:GITHUB_EVENT_NAME -eq 'workflow_dispatch') {
            # Overwrite GITHUB_REF with a trigger input
            $env:GITHUB_REF = '${{ github.event.inputs.git_ref }}'
          }
          ## Extract package id from ref
          $refs = $env:GITHUB_REF -split '/'
          if ($refs[1] -eq 'tags') {
            # Tag like "refs/tags/<package_id>/<package_version>"
            $packageId = $refs[2]
          } elseif (($refs[1] -eq 'heads') -and ($refs[2] -eq 'package')) {
            # Branch like "refs/heads/package/<package_id>"
            $packageId = $refs[3]
          } else {
            $message = 'Cannot extract a package id from ref "{0}"' -f $env:GITHUB_REF
            Write-Error -Message $message
            exit 1
          }
          if (-not (Test-Path -LiteralPath $packageId)) {
            $message = 'Directory for package "{0}" not found' -f $packageId
            Write-Error -Message $message
            exit 1
          }
          # Pass a package id to subsequent steps
          "PACKAGE_ID=$packageId" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
      - name: Build (if needed)
        working-directory: ${{ env.PACKAGE_ID }}
        run: |
          if (Test-Path -LiteralPath build.bat) {
            # Add mingw toolchains into PATH
            $env:PATH = "${env:MINGW_ROOT}/bin;${env:MSYS2_ROOT}/bin;${env:PATH}"
            .\build.bat
          } else {
            'Nothing to build'
          }
      - name: Package
        working-directory: ${{ env.PACKAGE_ID }}
        run: |
          choco pack
          if (Test-Path -LiteralPath test.bat) {
            .\test.bat
          }
      - name: Save a package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_ID }}_package
          path: '**/*.nupkg'
      - name: Publish
        working-directory: ${{ env.PACKAGE_ID }}
        run: choco push --source https://www.myget.org/F/kai2nenobu/ --api-key ${{ secrets.MYGET_API_KEY }}
